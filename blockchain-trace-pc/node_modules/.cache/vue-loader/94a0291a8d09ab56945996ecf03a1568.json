{"remainingRequest":"E:\\food\\blockchain-trace-pc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\food\\blockchain-trace-pc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\food\\blockchain-trace-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\food\\blockchain-trace-pc\\src\\layout\\components\\Navbar.vue?vue&type=template&id=d16d6306&scoped=true&","dependencies":[{"path":"E:\\food\\blockchain-trace-pc\\src\\layout\\components\\Navbar.vue","mtime":1692021609233},{"path":"E:\\food\\blockchain-trace-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\food\\blockchain-trace-pc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\food\\blockchain-trace-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\food\\blockchain-trace-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgeyBzdGF0aWNDbGFzczogIm5hdmJhciIgfSwKICAgIFsKICAgICAgX2MoImhhbWJ1cmdlciIsIHsKICAgICAgICBzdGF0aWNDbGFzczogImhhbWJ1cmdlci1jb250YWluZXIiLAogICAgICAgIGF0dHJzOiB7IGlkOiAiaGFtYnVyZ2VyLWNvbnRhaW5lciIsICJpcy1hY3RpdmUiOiBfdm0uc2lkZWJhci5vcGVuZWQgfSwKICAgICAgICBvbjogeyB0b2dnbGVDbGljazogX3ZtLnRvZ2dsZVNpZGVCYXIgfSwKICAgICAgfSksCiAgICAgIF9jKCJicmVhZGNydW1iIiwgewogICAgICAgIHN0YXRpY0NsYXNzOiAiYnJlYWRjcnVtYi1jb250YWluZXIiLAogICAgICAgIGF0dHJzOiB7IGlkOiAiYnJlYWRjcnVtYi1jb250YWluZXIiIH0sCiAgICAgIH0pLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAicmlnaHQtbWVudSIgfSwKICAgICAgICBbCiAgICAgICAgICBfdm0uZGV2aWNlICE9PSAibW9iaWxlIgogICAgICAgICAgICA/IFsKICAgICAgICAgICAgICAgIF9jKCJzZWFyY2giLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicmlnaHQtbWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJoZWFkZXItc2VhcmNoIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImVsLXRvb2x0aXAiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICLmupDnoIHlnLDlnYAiLAogICAgICAgICAgICAgICAgICAgICAgZWZmZWN0OiAiZGFyayIsCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQ6ICJib3R0b20iLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygicnVvLXlpLWdpdCIsIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicmlnaHQtbWVudS1pdGVtIGhvdmVyLWVmZmVjdCIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogInJ1b3lpLWdpdCIgfSwKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiZWwtdG9vbHRpcCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgY29udGVudDogIuaWh+aho+WcsOWdgCIsCiAgICAgICAgICAgICAgICAgICAgICBlZmZlY3Q6ICJkYXJrIiwKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudDogImJvdHRvbSIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJydW8teWktZG9jIiwgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyaWdodC1tZW51LWl0ZW0gaG92ZXItZWZmZWN0IiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAicnVveWktZG9jIiB9LAogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoInNjcmVlbmZ1bGwiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicmlnaHQtbWVudS1pdGVtIGhvdmVyLWVmZmVjdCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAic2NyZWVuZnVsbCIgfSwKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJlbC10b29sdGlwIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAi5biD5bGA5aSn5bCPIiwKICAgICAgICAgICAgICAgICAgICAgIGVmZmVjdDogImRhcmsiLAogICAgICAgICAgICAgICAgICAgICAgcGxhY2VtZW50OiAiYm90dG9tIiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoInNpemUtc2VsZWN0IiwgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyaWdodC1tZW51LWl0ZW0gaG92ZXItZWZmZWN0IiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAic2l6ZS1zZWxlY3QiIH0sCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJlbC1kcm9wZG93biIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImF2YXRhci1jb250YWluZXIgcmlnaHQtbWVudS1pdGVtIGhvdmVyLWVmZmVjdCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsgdHJpZ2dlcjogImNsaWNrIiB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhdmF0YXItd3JhcHBlciIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1c2VyLWF2YXRhciIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmF2YXRhciB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJlbC1pY29uLWNhcmV0LWJvdHRvbSIgfSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZWwtZHJvcGRvd24tbWVudSIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHNsb3Q6ICJkcm9wZG93biIgfSwgc2xvdDogImRyb3Bkb3duIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvdXNlci9wcm9maWxlIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgW19jKCJlbC1kcm9wZG93bi1pdGVtIiwgW192bS5fdigi5Liq5Lq65Lit5b+DIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZWwtZHJvcGRvd24taXRlbSIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgbmF0aXZlT246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uc2V0dGluZyA9IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX2MoInNwYW4iLCBbX3ZtLl92KCLluIPlsYDorr7nva4iKV0pXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZWwtZHJvcGRvd24taXRlbSIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZGl2aWRlZDogIiIgfSwKICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5sb2dvdXQoJGV2ZW50KQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfYygic3BhbiIsIFtfdm0uX3YoIumAgOWHuueZu+W9lSIpXSldCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgXSwKICAgICAgICAyCiAgICAgICksCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}